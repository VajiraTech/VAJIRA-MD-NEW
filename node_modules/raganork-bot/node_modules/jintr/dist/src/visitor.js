"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const map_1 = __importDefault(require("./map"));
class Visitor {
    constructor(ast) {
        this.scope = new Map();
        this.listeners = {};
        this.ast = ast;
    }
    /**
     * Starts interpreting the program.
     */
    run() {
        let result;
        for (const node of this.ast) {
            result = this.visitNode(node);
        }
        return result;
    }
    /**
     * Visits given node and executes it.
     */
    visitNode(node) {
        if (!node)
            return null;
        try {
            const target_node = (0, map_1.default)(node.type);
            return target_node.visit(node, this);
        }
        catch (err) {
            if (err.code === 'MODULE_NOT_FOUND') {
                console.warn('Node not implemented:', node);
            }
            else {
                throw err;
            }
        }
    }
    /**
     * Listens for node calls. Can be used to implement new functionality.
     * @param node_name - the node to listen for.
     * @param fn - the callback function.
     */
    on(node_name, fn) {
        this.listeners[node_name] = fn;
    }
}
exports.default = Visitor;
