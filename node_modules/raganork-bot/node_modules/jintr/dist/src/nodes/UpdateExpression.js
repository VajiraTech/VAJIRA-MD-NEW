"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class UpdateExpression {
    static visit(node, visitor) {
        const operator = node.operator;
        const arg = visitor.visitNode(node.argument);
        switch (operator) {
            case '++': {
                if (node.argument.object) {
                    const target_node = visitor.visitNode(node.argument.object);
                    return target_node[visitor.visitNode(node.argument.property)]++;
                }
                let target_node = visitor.visitNode(node.argument);
                visitor.scope.set(node.argument.name, target_node + 1);
                return node.prefix ? ++target_node : target_node;
            }
            case '--': {
                if (node.argument.object) {
                    const target_node = visitor.visitNode(node.argument.object);
                    return target_node[visitor.visitNode(node.argument.property)]--;
                }
                let target_node = visitor.visitNode(node.argument);
                visitor.scope.set(node.argument.name, target_node - 1);
                return node.prefix ? --target_node : target_node;
            }
            default:
                console.warn('Unsupported operator: ', operator);
        }
    }
}
exports.default = UpdateExpression;
