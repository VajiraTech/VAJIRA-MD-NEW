"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class AssignmentExpression {
    static visit(node, visitor) {
        const operator = node.operator;
        const right_node = visitor.visitNode(node.right);
        switch (operator) {
            case '=':
                if (node.left.computed) {
                    const obj = visitor.visitNode(node.left.object);
                    const prop = visitor.visitNode(node.left.property);
                    return obj[prop] = right_node;
                }
                visitor.scope.set(node.left.name, right_node);
                return visitor.scope.get(node.left.name);
            case '+=':
                visitor.scope.set(node.left.name, visitor.scope.get(node.left.name) + right_node);
                return visitor.scope.get(node.left.name);
            case '-=':
                visitor.scope.set(node.left.name, visitor.scope.get(node.left.name) - right_node);
                return visitor.scope.get(node.left.name);
            default:
                console.warn('Operator not implemented:', operator);
        }
    }
}
exports.default = AssignmentExpression;
