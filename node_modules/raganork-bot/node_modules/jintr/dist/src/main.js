"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const visitor_1 = __importDefault(require("./visitor"));
const acorn_1 = require("acorn");
class Jinter {
    constructor(input) {
        const program = (0, acorn_1.parse)(input, { ecmaVersion: 2020 });
        this.ast = program.body;
        this.visitor = new visitor_1.default(this.ast);
        this.scope = this.visitor.scope;
        this.visitor.on('console', (node, visitor) => {
            if (node.type === 'Identifier')
                return console;
            const prop = visitor.visitNode(node.callee.property);
            const args = node.arguments.map((arg) => visitor.visitNode(arg));
            const console_prop = console[prop];
            if (!console_prop)
                return 'proceed';
            return console_prop(...args);
        });
        this.visitor.on('Math', (node, visitor) => {
            if (node.type === 'Identifier')
                return Math;
            const prop = visitor.visitNode(node.callee.property);
            const args = node.arguments.map((arg) => visitor.visitNode(arg));
            const math_prop = Math[prop];
            if (!math_prop)
                return 'proceed';
            return math_prop(...args);
        });
        this.visitor.on('String', (node, visitor) => {
            if (node.type === 'Identifier')
                return String;
            const prop = visitor.visitNode(node.callee.property);
            const args = node.arguments.map((arg) => visitor.visitNode(arg));
            const string_prop = String[prop];
            if (!string_prop)
                return 'proceed';
            return string_prop(args);
        });
        this.visitor.on('Date', (node) => {
            if (node.type === 'Identifier')
                return Date;
        });
    }
    interpret() {
        return this.visitor.run();
    }
}
exports.default = Jinter;
