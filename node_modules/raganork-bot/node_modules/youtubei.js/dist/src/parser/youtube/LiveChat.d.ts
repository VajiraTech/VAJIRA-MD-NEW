import EventEmitter from '../../utils/EventEmitterLike';
import { LiveChatContinuation, ParsedResponse } from '../index';
import VideoInfo from './VideoInfo';
import AddChatItemAction from '../classes/livechat/AddChatItemAction';
import AddLiveChatTickerItemAction from '../classes/livechat/AddLiveChatTickerItemAction';
import MarkChatItemAsDeletedAction from '../classes/livechat/MarkChatItemAsDeletedAction';
import MarkChatItemsByAuthorAsDeletedAction from '../classes/livechat/MarkChatItemsByAuthorAsDeletedAction';
import ReplaceChatItemAction from '../classes/livechat/ReplaceChatItemAction';
import ReplayChatItemAction from '../classes/livechat/ReplayChatItemAction';
import ShowLiveChatActionPanelAction from '../classes/livechat/ShowLiveChatActionPanelAction';
import UpdateDateTextAction from '../classes/livechat/UpdateDateTextAction';
import UpdateDescriptionAction from '../classes/livechat/UpdateDescriptionAction';
import UpdateTitleAction from '../classes/livechat/UpdateTitleAction';
import UpdateToggleButtonTextAction from '../classes/livechat/UpdateToggleButtonTextAction';
import UpdateViewershipAction from '../classes/livechat/UpdateViewershipAction';
import AddBannerToLiveChatCommand from '../classes/livechat/AddBannerToLiveChatCommand';
import RemoveBannerForLiveChatCommand from '../classes/livechat/RemoveBannerForLiveChatCommand';
import ShowLiveChatTooltipCommand from '../classes/livechat/ShowLiveChatTooltipCommand';
import type { ObservedArray } from '../helpers';
import Button from '../classes/Button';
import LiveChatAutoModMessage from '../classes/livechat/items/LiveChatAutoModMessage';
import LiveChatMembershipItem from '../classes/livechat/items/LiveChatMembershipItem';
import LiveChatPaidMessage from '../classes/livechat/items/LiveChatPaidMessage';
import LiveChatPaidSticker from '../classes/livechat/items/LiveChatPaidSticker';
import LiveChatTextMessage from '../classes/livechat/items/LiveChatTextMessage';
import LiveChatViewerEngagementMessage from '../classes/livechat/items/LiveChatViewerEngagementMessage';
import ItemMenu from './ItemMenu';
export type ChatAction = AddChatItemAction | AddBannerToLiveChatCommand | AddLiveChatTickerItemAction | MarkChatItemAsDeletedAction | MarkChatItemsByAuthorAsDeletedAction | RemoveBannerForLiveChatCommand | ReplaceChatItemAction | ReplayChatItemAction | ShowLiveChatActionPanelAction | ShowLiveChatTooltipCommand;
export type ChatItemWithMenu = LiveChatAutoModMessage | LiveChatMembershipItem | LiveChatPaidMessage | LiveChatPaidSticker | LiveChatTextMessage | LiveChatViewerEngagementMessage;
export interface LiveMetadata {
    title?: UpdateTitleAction;
    description?: UpdateDescriptionAction;
    views?: UpdateViewershipAction;
    likes?: UpdateToggleButtonTextAction;
    date?: UpdateDateTextAction;
}
declare class LiveChat extends EventEmitter {
    #private;
    initial_info?: LiveChatContinuation;
    metadata?: LiveMetadata;
    running: boolean;
    is_replay: boolean;
    constructor(video_info: VideoInfo);
    on(type: 'start', listener: (initial_data: LiveChatContinuation) => void): void;
    on(type: 'chat-update', listener: (action: ChatAction) => void): void;
    on(type: 'metadata-update', listener: (metadata: LiveMetadata) => void): void;
    on(type: 'error', listener: (err: Error) => void): void;
    on(type: 'end', listener: () => void): void;
    start(): void;
    stop(): void;
    /**
     * Sends a message.
     * @param text - Text to send.
     */
    sendMessage(text: string): Promise<ObservedArray<AddChatItemAction>>;
    /**
     * Applies given filter to the live chat.
     * @param filter - Filter to apply.
     */
    applyFilter(filter: 'TOP_CHAT' | 'LIVE_CHAT'): void;
    /**
     * Retrieves given chat item's menu.
     */
    getItemMenu(item: ChatItemWithMenu): Promise<ItemMenu>;
    /**
     * Equivalent to "clicking" a button.
     */
    selectButton(button: Button): Promise<ParsedResponse>;
}
export default LiveChat;
