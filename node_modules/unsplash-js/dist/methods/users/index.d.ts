import { OrientationParam, PaginationParams } from '../../types/request';
import * as User from './types';
import * as Photo from '../photos/types';
import * as Collection from '../collections/types';
declare type Username = {
    username: string;
};
export declare const get: {
    getPathname: (params: Username) => string;
} & {
    handleRequest: (a: Username, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
    handleResponse: import("../../helpers/response").HandleResponse<User.Full>;
};
export declare const getPhotos: {
    getPathname: (params: Username) => string;
} & {
    handleRequest: (a: {
        stats?: boolean | undefined;
    } & OrientationParam & Username & PaginationParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
    handleResponse: import("../../helpers/response").HandleResponse<{
        results: Photo.Basic[];
        total: number;
    }>;
};
export declare const getLikes: {
    getPathname: (params: Username) => string;
} & {
    handleRequest: (a: OrientationParam & Username & PaginationParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
    handleResponse: import("../../helpers/response").HandleResponse<{
        results: Photo.Basic[];
        total: number;
    }>;
};
export declare const getCollections: {
    getPathname: (params: Username) => string;
} & {
    handleRequest: (a: Username & PaginationParams, additionalFetchOptions?: import("../../helpers/request").AdditionalFetchOptions | undefined) => import("../../helpers/request").CompleteRequestParams;
    handleResponse: import("../../helpers/response").HandleResponse<{
        results: Collection.Basic[];
        total: number;
    }>;
};
export {};
