
import decodeAudio, { decoders } from './audio-decode.js';
import wav from 'audio-lena/wav.js';
import mp3 from 'audio-lena/mp3.js';
import ogg from 'audio-lena/ogg.js';
import flac from 'audio-lena/flac.js';
import opus from 'audio-lena/opus.js';
import t, { is, throws } from 'tst';
import b64 from 'base64-arraybuffer'


//as a callback
t('wav buffer', async function (t) {
	console.time('wav first')
	await decoders.wav()
	console.timeEnd('wav first')

	console.time('wav second')
	let audioBuffer = await decodeAudio(wav)
	console.timeEnd('wav second')
	is(audioBuffer.duration | 0, 12, 'wav duration')
});

t('mp3 buffer', async function (t) {
	console.time('mp3 first')
	await decoders.mp3()
	console.timeEnd('mp3 first')

	console.time('mp3 second')
	let audioBuffer = await decodeAudio(mp3)
	console.timeEnd('mp3 second')
	is(audioBuffer.duration | 0, 12, 'mp3 duration')
});

t('ogg buffer', async function (t) {
	console.time('ogg first')
	let audioBuffer = await decodeAudio(ogg)
	console.timeEnd('ogg first')
	is(audioBuffer.duration | 0, 12, 'ogg duration')

	console.time('ogg second')
	audioBuffer = await decodeAudio(ogg)
	console.timeEnd('ogg second')
	is(audioBuffer.duration | 0, 12, 'ogg duration')
});

t('flac buffer', async function (t) {
	console.time('flac first')
	let audioBuffer = await decodeAudio(flac)
	console.timeEnd('flac first')
	is(audioBuffer.duration | 0, 12, 'flac duration')

	console.time('flac second')
	audioBuffer = await decodeAudio(flac)
	console.timeEnd('flac second')
	is(audioBuffer.duration | 0, 12, 'flac duration')
});

t('opus buffer', async function (t) {
	console.time('opus first')
	let audioBuffer = await decodeAudio(opus)
	console.timeEnd('opus first')
	is(audioBuffer.duration | 0, 12, 'opus duration')

	console.time('opus second')
	audioBuffer = await decodeAudio(opus)
	console.timeEnd('opus second')
	is(audioBuffer.duration | 0, 12, 'opus duration')
});

t('qoa buffer', async function (t) {
	const qoa = b64.decode(``)

	console.time('qoa first')
	let audioBuffer = await decodeAudio(qoa)
	console.timeEnd('qoa first')

	console.time('qoa second')
	audioBuffer = await decodeAudio(qoa)
	console.timeEnd('qoa second')
	is(Math.floor(audioBuffer.duration * 100) / 100, 0.82, 'qoa duration')
})

t('malformed data', async t => {
	let log = []
	try {
		let x = await decodeAudio(new Float32Array(10))
	} catch (e) { log.push('arr') }

	try {
		let x = await decodeAudio(null)
	} catch (e) { log.push('null') }

	try {
		let x = await decodeAudio(Promise.resolve())
	} catch (e) { log.push('nonbuf') }

	is(log, ['arr', 'null', 'nonbuf'])
})

t.skip('sequence #38', async t => {
	let flacBuffer = await decoders.flac(new Uint8Array(flac))
	is(flacBuffer.duration | 0, 12, 'flac duration')

	let mp3Buffer = await decoders.mp3(new Uint8Array(mp3))
	is(mp3Buffer.duration | 0, 12, 'mp3 duration')
})
