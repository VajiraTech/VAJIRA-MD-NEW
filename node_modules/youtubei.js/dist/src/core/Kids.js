var _Kids_session;
import { __awaiter, __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import Search from '../parser/ytkids/Search.js';
import HomeFeed from '../parser/ytkids/HomeFeed.js';
import VideoInfo from '../parser/ytkids/VideoInfo.js';
import Channel from '../parser/ytkids/Channel.js';
import { generateRandomString } from '../utils/Utils.js';
class Kids {
    constructor(session) {
        _Kids_session.set(this, void 0);
        __classPrivateFieldSet(this, _Kids_session, session, "f");
    }
    /**
     * Searches the given query.
     * @param query - The query.
     */
    search(query) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield __classPrivateFieldGet(this, _Kids_session, "f").actions.execute('/search', { query, client: 'YTKIDS' });
            return new Search(__classPrivateFieldGet(this, _Kids_session, "f").actions, response);
        });
    }
    /**
     * Retrieves video info.
     * @param video_id - The video id.
     */
    getInfo(video_id) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const cpn = generateRandomString(16);
            const initial_info = __classPrivateFieldGet(this, _Kids_session, "f").actions.execute('/player', {
                cpn,
                client: 'YTKIDS',
                videoId: video_id,
                playbackContext: {
                    contentPlaybackContext: {
                        signatureTimestamp: ((_a = __classPrivateFieldGet(this, _Kids_session, "f").player) === null || _a === void 0 ? void 0 : _a.sts) || 0
                    }
                }
            });
            const continuation = __classPrivateFieldGet(this, _Kids_session, "f").actions.execute('/next', { videoId: video_id, client: 'YTKIDS' });
            const response = yield Promise.all([initial_info, continuation]);
            return new VideoInfo(response, __classPrivateFieldGet(this, _Kids_session, "f").actions, cpn);
        });
    }
    /**
     * Retrieves the contents of the given channel.
    * @param channel_id - The channel id.
     */
    getChannel(channel_id) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield __classPrivateFieldGet(this, _Kids_session, "f").actions.execute('/browse', { browseId: channel_id, client: 'YTKIDS' });
            return new Channel(__classPrivateFieldGet(this, _Kids_session, "f").actions, response);
        });
    }
    /**
     * Retrieves the home feed.
     */
    getHomeFeed() {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield __classPrivateFieldGet(this, _Kids_session, "f").actions.execute('/browse', { browseId: 'FEkids_home', client: 'YTKIDS' });
            return new HomeFeed(__classPrivateFieldGet(this, _Kids_session, "f").actions, response);
        });
    }
}
_Kids_session = new WeakMap();
export default Kids;
//# sourceMappingURL=Kids.js.map